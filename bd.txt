-- Tabela de Usuários
CREATE TABLE users (
    id INT PRIMARY KEY AUTO_INCREMENT,
    username VARCHAR(20) NOT NULL UNIQUE,
    email VARCHAR(255) NOT NULL UNIQUE,
    senha VARCHAR(255) NOT NULL,
    profile_pic VARCHAR(255) DEFAULT NULL,
    data_cadastro DATE NOT NULL,
    -- tipo ENUM('comum', 'administrador') NOT NULL
);

-- Tabela de Posts Normais
CREATE TABLE IF NOT EXISTS postnormal (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    content TEXT NOT NULL,
    image_path VARCHAR(255) DEFAULT NULL,
    youtube_link VARCHAR(255) DEFAULT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- Tabela de Post dos Jogos
CREATE TABLE postjogo(
    id INT PRIMARY KEY AUTO_INCREMENT,
    id_criador INT,
    jogo VARCHAR(255) NOT NULL,
    horario TIME NOT NULL,
    max_jogadores INT NOT NULL,
    data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_criador) REFERENCES users(id)
);

-- Tabela de Participantes da Partida
CREATE TABLE participantepartida (
    id_partida INT,
    id_usuario INT,
    PRIMARY KEY (id_partida, user_id),
    FOREIGN KEY (id_partida) REFERENCES postjogo(id),
    FOREIGN KEY (id_usuario) REFERENCES users(id)
);

-- Relacionamentos específicos de Administradores
-- Exclusão de usuários
CREATE TABLE AdministradorExcluiUser (
    id_admin INT,
    user_id INT,
    PRIMARY KEY (id_admin, user_id),
    FOREIGN KEY (id_admin) REFERENCES users(id),
    FOREIGN KEY (user_id) REFERENCES users(id)
);

-- Exclusão de postagens
CREATE TABLE AdministradorExcluiPostagem (
    id_admin INT,
    post_id INT,
    PRIMARY KEY (id_admin, post_id),
    FOREIGN KEY (id_admin) REFERENCES users(id),
    FOREIGN KEY (post_id) REFERENCES postnormal(id)
);

-- Tabela de links
CREATE TABLE IF NOT EXISTS links (
    id INT AUTO_INCREMENT PRIMARY KEY,
    post_id INT NOT NULL,
    user_id INT NOT NULL,
    FOREIGN KEY (post_id) REFERENCES postnormal(id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- Tabela de likes
CREATE TABLE IF NOT EXISTS likes (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    post_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE
);

-- Tabela de dislikes
CREATE TABLE IF NOT EXISTS dislikes (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    post_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE
);

-- Tabela de comentários
CREATE TABLE IF NOT EXISTS comments (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    post_id INT NOT NULL,
    content TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE
);

-- Tabela de Planos
CREATE TABLE planos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    tipo_plano ENUM('básico', 'pro', 'ultimate') NOT NULL,
    user_id INT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- Tabela de mensagens (chat)
CREATE TABLE messages (
  id INT AUTO_INCREMENT PRIMARY KEY,
  remetente_id INT NOT NULL,
  destinatario_id INT NOT NULL,
  mensagem TEXT NOT NULL,
  timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (remetente_id) REFERENCES users(id)ON DELETE CASCADE,
  FOREIGN KEY (destinatario_id) REFERENCES users(id) ON DELETE CASCADE
);

-- Tabela de Jogos
CREATE TABLE jogos (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nome VARCHAR(255) NOT NULL
);